// VERB PHRASES
// ================================================
 
// declarative sentence

=[%fact]
  <np> <vp> ((<np>) <np>)
  you <ACT> ((<np>) <np>)
  <np> <vp> (<np>) to <cmd>
  <np> <vp> (<np>) <%fact-g>
  <%obj-i0> <$add>
  <%obj> <$add>
  there is <%obj-i>


// fact about some indeterminate object

=[%fact-i]
  <%obj-i> <$add>


// abstract action by some agent

=[%fact-g]
  (<BLF>) <ACT-G> (<np> (<np>))


// verb phrase

=[vp]
  (<BLF>) <ACT-S>
  (<BLF>) <ACT-D>
  (<BLF>) <AUX-D> (<BLF>) (<NEG>) <ACT>
  (<BLF>) <aux> (<BLF>) (<NEG>) <ACT-G>


// ==================================================

// action to take

=[cmd]
  <!do>
  <!chk>
  <!chk-t>
  <!find>
  <!find-t>


// hypothetical action (not a command)

=[cmd-s]
  <!do-s>
  <find-s>
  <!chk-s>


// --------------------------------------------------

// DO directive ("you" or missing subject, 0 to 2 objects)

=[!do]
  (you <PREF>) (<adv3>) <ACT> (<np> (<np>)) (<vmod3>)
  (you <PREF>) (<adv3>) <SAY> (to <np>) <QUOTE>
  <STOP> <ACT-G> (<np> (<np>)) (<vmod3>)
  <NEG-V> <ACT> (<np> (<np>)) (<vmod3>)
  

// hypothetical DO directive for prohibition

=[!do-s]
  (<adv3>) <ACT> <np-s> (<np-s>) (<vmod3>)
  (<adv3>) <ACT> <np-s> <np> (<vmod3>)
  (<adv3>) <SAY> to <np-s> <QUOTE>


// DO directive phrased as a progressive

=[!do-g]
  <ACT-G> (<np> (<np>)) (<vmod3>)


// request to echo something

=[SAY]
  say


// from 1 to 16 words

=[QUOTE]
 # (# (# (# (# (# (# (# (# (# (# (# (# (# (# (#)))))))))))))))


// negated verb

=[NEG-V]
  don't 
  do not


// stop some currently on-going action

=[STOP]
  stop
  quit


// --------------------------------------------------

// FIND directive

=[!find]
  find (out) <query>
  find <np>


// implicit tell for answering wh-question

=[!find-t]
  <query>


// types of questions

=[query]
  <$q-ako>
  <$q-hq>
  <$q-lex>
  <$q-loc>
  <$q-cnt>


// hypothetical FIND for prohibitions

=[!find-s]
  find (out) <$q-ako-s>
  find (out) <$q-hq-s>


// embedded question about type

=[$q-ako]
  what (is) <np> (is)
  what <%n-super> (is) <np> (is)


// hypothetical embedded question about type

=[$q-ako-s]
  what <np-s> are
  what <n-super> <np-s> are


// embedded question about property

=[$q-hq]
  what <AKO> (is) <np> (is)
  what (is) <np-poss> <AKO> (is)
  what (is) the <AKO> of <np> (is)


// hypothetical embedded question about property

=[$q-hq-s]
  what <AKO> <np-s> are


// question about the identity of an item

=[$q-lex]
  who (is) <%obj> (is)
  who <$add>
  what <$add>


// question about location of an item

=[$q-loc]
  where (is) <np> (is)


// question about number of items

=[$q-cnt]
  how many <np-s> (are) there (are)


// --------------------------------------------------

// CHK directive

=[!chk]
  <check-v> <%fact>


// implicit tell for answering yn-question

=[!chk-t]
  <be> <%fact>


// check verb phrase

=[check-v]
  check (if) 
  check that
  find (out) if


// ==================================================

// set of adverbs that appear before verb

=[adv3]
  <manner> (<manner> (<manner>))


// set of modifiers that appear after verb

=[vmod3]
  <vmod> (<vmod> (<vmod>))


// generic verb phrase modifier

=[vmod]
  <AMT>
  <dir3>
  <manner>
  <$rel>


// possibly compound direction

=[dir3]
  <DIR> ((<DIR>) and <DIR>)


// manner of acting

=[manner]
  (<DEG>) <MOD> 


// verb adjunct (prepositional phrase) 

=[$rel]
  <place>
  with <np>


