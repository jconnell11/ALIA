// Inferences between category values in SceneVis kernel
// ========================================================

RULE 1 - "If something is far then it is not medium close"
    if: hq-1 -lex-  far
             -hq--> obj-1
  then: hq-2 -lex-  medium close
             -neg-  1
             -hq--> obj-1

RULE 2 - "If something is far then it is not close"
    if: hq-1 -lex-  far
             -hq--> obj-1
  then: hq-2 -lex-  close
             -neg-  1
             -hq--> obj-1

RULE 3 - "If something is medium close then it is not far"
    if: hq-1 -lex-  medium close
             -hq--> obj-1
  then: hq-2 -lex-  far
             -neg-  1
             -hq--> obj-1

RULE 4 - "If something is medium close then it is not close"
    if: hq-1 -lex-  medium close
             -hq--> obj-1
  then: hq-2 -lex-  close
             -neg-  1
             -hq--> obj-1

RULE 5 - "If something is close then it is not far"
    if: hq-1 -lex-  close
             -hq--> obj-1
  then: hq-2 -lex-  far
             -neg-  1
             -hq--> obj-1

RULE 6 - "If something is close then it is not medium close"
    if: hq-1 -lex-  close
             -hq--> obj-1
  then: hq-2 -lex-  medium close
             -neg-  1
             -hq--> obj-1

// ------------------------------------------------

RULE 7 - "If something is farther than something else then that something is closer than it"
    if: hq-1 -lex-  far
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  close
             -hq--> obj-2
             -alt-> obj-1

RULE 8 - "If something is closer than something else then that something is farther than it"
    if: hq-1 -lex-  close
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  far
             -hq--> obj-2
             -alt-> obj-1

// ------------------------------------------------

RULE 9 - "Near is a distance"
    if:  hq-1 -lex-  near
              -hq--> obj-1
  then: ako-1 -lex-  distance
              -ako-> hq-1

RULE 10 - "A nearness is a distance"
    if: ako-1 -lex-  nearness
              -ako-> hq-1
  then: ako-2 -lex-  distance
              -ako-> hq-1

RULE 11 - "A distance is a nearness"
    if: ako-1 -lex-  distance
              -ako-> hq-1
  then: ako-2 -lex-  nearness
              -ako-> hq-1

RULE 12 - "If something is close then it is near"
    if: hq-1 -lex-  close
             -hq--> obj-1
  then: hq-2 -lex-  near
             -hq--> obj-1

RULE 13 - "If something is near then it is close"
    if: hq-1 -lex-  near
             -hq--> obj-1
  then: hq-2 -lex-  close
             -hq--> obj-1

RULE 14 - "If something is not close then it is not near"
    if: hq-1 -lex-  close
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  near
             -neg-  1
             -hq--> obj-1

RULE 15 - "If something is not near then it is not close"
    if: hq-1 -lex-  near
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  close
             -neg-  1
             -hq--> obj-1

RULE 16 - "If something is closer than something else then it is nearer than it"
    if: hq-1 -lex-  close
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  near
             -hq--> obj-1
             -alt-> obj-2

RULE 17 - "If something is nearer than something else then it is closer than it"
    if: hq-1 -lex-  near
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  close
             -hq--> obj-1
             -alt-> obj-2

// ================================================

RULE 18 - "If something is small then it is not medium big"
    if: hq-1 -lex-  small
             -hq--> obj-1
  then: hq-2 -lex-  medium big
             -neg-  1
             -hq--> obj-1

RULE 19 - "If something is small then it is not big"
    if: hq-1 -lex-  small
             -hq--> obj-1
  then: hq-2 -lex-  big
             -neg-  1
             -hq--> obj-1

RULE 20 - "If something is medium big then it is not small"
    if: hq-1 -lex-  medium big
             -hq--> obj-1
  then: hq-2 -lex-  small
             -neg-  1
             -hq--> obj-1

RULE 21 - "If something is medium big then it is not big"
    if: hq-1 -lex-  medium big
             -hq--> obj-1
  then: hq-2 -lex-  big
             -neg-  1
             -hq--> obj-1

RULE 22 - "If something is big then it is not small"
    if: hq-1 -lex-  big
             -hq--> obj-1
  then: hq-2 -lex-  small
             -neg-  1
             -hq--> obj-1

RULE 23 - "If something is big then it is not medium big"
    if: hq-1 -lex-  big
             -hq--> obj-1
  then: hq-2 -lex-  medium big
             -neg-  1
             -hq--> obj-1

// ------------------------------------------------

RULE 24 - "If something is smaller than something else then that something is bigger than it"
    if: hq-1 -lex-  small
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  big
             -hq--> obj-2
             -alt-> obj-1

RULE 25 - "If something is bigger than something else then that something is smaller than it"
    if: hq-1 -lex-  big
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  small
             -hq--> obj-2
             -alt-> obj-1

// ------------------------------------------------

RULE 26 - "Large is a size"
    if:  hq-1 -lex-  large
              -hq--> obj-1
  then: ako-1 -lex-  size
              -ako-> hq-1

RULE 27 - "A largeness is a size"
    if: ako-1 -lex-  largeness
              -ako-> hq-1
  then: ako-2 -lex-  size
              -ako-> hq-1

RULE 28 - "A size is a largeness"
    if: ako-1 -lex-  size
              -ako-> hq-1
  then: ako-2 -lex-  largeness
              -ako-> hq-1

RULE 29 - "If something is big then it is large"
    if: hq-1 -lex-  big
             -hq--> obj-1
  then: hq-2 -lex-  large
             -hq--> obj-1

RULE 30 - "If something is large then it is big"
    if: hq-1 -lex-  large
             -hq--> obj-1
  then: hq-2 -lex-  big
             -hq--> obj-1

RULE 31 - "If something is not big then it is not large"
    if: hq-1 -lex-  big
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  large
             -neg-  1
             -hq--> obj-1

RULE 32 - "If something is not large then it is not big"
    if: hq-1 -lex-  large
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  big
             -neg-  1
             -hq--> obj-1

RULE 33 - "If something is bigger than something else then it is larger than it"
    if: hq-1 -lex-  big
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  large
             -hq--> obj-1
             -alt-> obj-2

RULE 34 - "If something is larger than something else then it is bigger than it"
    if: hq-1 -lex-  large
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  big
             -hq--> obj-1
             -alt-> obj-2

// ================================================

RULE 35 - "If something is compact then it is not medium long"
    if: hq-1 -lex-  compact
             -hq--> obj-1
  then: hq-2 -lex-  medium long
             -neg-  1
             -hq--> obj-1

RULE 36 - "If something is compact then it is not long"
    if: hq-1 -lex-  compact
             -hq--> obj-1
  then: hq-2 -lex-  long
             -neg-  1
             -hq--> obj-1

RULE 37 - "If something is medium long then it is not compact"
    if: hq-1 -lex-  medium long
             -hq--> obj-1
  then: hq-2 -lex-  compact
             -neg-  1
             -hq--> obj-1

RULE 38 - "If something is medium long then it is not long"
    if: hq-1 -lex-  medium long
             -hq--> obj-1
  then: hq-2 -lex-  long
             -neg-  1
             -hq--> obj-1

RULE 39 - "If something is long then it is not compact"
    if: hq-1 -lex-  long
             -hq--> obj-1
  then: hq-2 -lex-  compact
             -neg-  1
             -hq--> obj-1

RULE 40 - "If something is long then it is not medium long"
    if: hq-1 -lex-  long
             -hq--> obj-1
  then: hq-2 -lex-  medium long
             -neg-  1
             -hq--> obj-1

// ------------------------------------------------

RULE 41 - "If something is compacter than something else then that something is longer than it"
    if: hq-1 -lex-  compact
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  long
             -hq--> obj-2
             -alt-> obj-1

RULE 42 - "If something is longer than something else then that something is compacter than it"
    if: hq-1 -lex-  long
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  compact
             -hq--> obj-2
             -alt-> obj-1

// ================================================

RULE 43 - "If something is narrow then it is not medium wide"
    if: hq-1 -lex-  narrow
             -hq--> obj-1
  then: hq-2 -lex-  medium wide
             -neg-  1
             -hq--> obj-1

RULE 44 - "If something is narrow then it is not wide"
    if: hq-1 -lex-  narrow
             -hq--> obj-1
  then: hq-2 -lex-  wide
             -neg-  1
             -hq--> obj-1

RULE 45 - "If something is medium wide then it is not narrow"
    if: hq-1 -lex-  medium wide
             -hq--> obj-1
  then: hq-2 -lex-  narrow
             -neg-  1
             -hq--> obj-1

RULE 46 - "If something is medium wide then it is not wide"
    if: hq-1 -lex-  medium wide
             -hq--> obj-1
  then: hq-2 -lex-  wide
             -neg-  1
             -hq--> obj-1

RULE 47 - "If something is wide then it is not narrow"
    if: hq-1 -lex-  wide
             -hq--> obj-1
  then: hq-2 -lex-  narrow
             -neg-  1
             -hq--> obj-1

RULE 48 - "If something is wide then it is not medium wide"
    if: hq-1 -lex-  wide
             -hq--> obj-1
  then: hq-2 -lex-  medium wide
             -neg-  1
             -hq--> obj-1

// ------------------------------------------------

RULE 49 - "If something is narrower than something else then that something is wider than it"
    if: hq-1 -lex-  narrow
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  wide
             -hq--> obj-2
             -alt-> obj-1

RULE 50 - "If something is wider than something else then that something is narrower than it"
    if: hq-1 -lex-  wide
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  narrow
             -hq--> obj-2
             -alt-> obj-1

// ------------------------------------------------

RULE 51 - "Fat is a width"
    if:  hq-1 -lex-  fat
              -hq--> obj-1
  then: ako-1 -lex-  width
              -ako-> hq-1

RULE 52 - "A fatness is a width"
    if: ako-1 -lex-  fatness
              -ako-> hq-1
  then: ako-2 -lex-  width
              -ako-> hq-1

RULE 53 - "A width is a fatness"
    if: ako-1 -lex-  width
              -ako-> hq-1
  then: ako-2 -lex-  fatness
              -ako-> hq-1

RULE 54 - "If something is wide then it is fat"
    if: hq-1 -lex-  wide
             -hq--> obj-1
  then: hq-2 -lex-  fat
             -hq--> obj-1

RULE 55 - "If something is fat then it is wide"
    if: hq-1 -lex-  fat
             -hq--> obj-1
  then: hq-2 -lex-  wide
             -hq--> obj-1

RULE 56 - "If something is not wide then it is not fat"
    if: hq-1 -lex-  wide
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  fat
             -neg-  1
             -hq--> obj-1

RULE 57 - "If something is not fat then it is not wide"
    if: hq-1 -lex-  fat
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  wide
             -neg-  1
             -hq--> obj-1

RULE 58 - "If something is wider than something else then it is fatter than it"
    if: hq-1 -lex-  wide
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  fat
             -hq--> obj-1
             -alt-> obj-2

RULE 59 - "If something is fatter than something else then it is wider than it"
    if: hq-1 -lex-  fat
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  wide
             -hq--> obj-1
             -alt-> obj-2

// ------------------------------------------------

RULE 60 - "Skinny is a width"
    if:  hq-1 -lex-  skinny
              -hq--> obj-1
  then: ako-1 -lex-  width
              -ako-> hq-1

RULE 61 - "A skinniness is a width"
    if: ako-1 -lex-  skinniness
              -ako-> hq-1
  then: ako-2 -lex-  width
              -ako-> hq-1

RULE 62 - "A width is a skinniness"
    if: ako-1 -lex-  width
              -ako-> hq-1
  then: ako-2 -lex-  skinniness
              -ako-> hq-1

RULE 63 - "If something is narrow then it is skinny"
    if: hq-1 -lex-  narrow
             -hq--> obj-1
  then: hq-2 -lex-  skinny
             -hq--> obj-1

RULE 64 - "If something is skinny then it is narrow"
    if: hq-1 -lex-  skinny
             -hq--> obj-1
  then: hq-2 -lex-  narrow
             -hq--> obj-1

RULE 65 - "If something is not narrow then it is not skinny"
    if: hq-1 -lex-  narrow
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  skinny
             -neg-  1
             -hq--> obj-1

RULE 66 - "If something is not skinny then it is not narrow"
    if: hq-1 -lex-  skinny
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  narrow
             -neg-  1
             -hq--> obj-1

RULE 67 - "If something is narrower than something else then it is skinnier than it"
    if: hq-1 -lex-  narrow
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  skinny
             -hq--> obj-1
             -alt-> obj-2

RULE 68 - "If something is skinnier than something else then it is narrower than it"
    if: hq-1 -lex-  skinny
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  narrow
             -hq--> obj-1
             -alt-> obj-2

// ================================================

RULE 69 - "If something is thin then it is not medium thick"
    if: hq-1 -lex-  thin
             -hq--> obj-1
  then: hq-2 -lex-  medium thick
             -neg-  1
             -hq--> obj-1

RULE 70 - "If something is thin then it is not thick"
    if: hq-1 -lex-  thin
             -hq--> obj-1
  then: hq-2 -lex-  thick
             -neg-  1
             -hq--> obj-1

RULE 71 - "If something is medium thick then it is not thin"
    if: hq-1 -lex-  medium thick
             -hq--> obj-1
  then: hq-2 -lex-  thin
             -neg-  1
             -hq--> obj-1

RULE 72 - "If something is medium thick then it is not thick"
    if: hq-1 -lex-  medium thick
             -hq--> obj-1
  then: hq-2 -lex-  thick
             -neg-  1
             -hq--> obj-1

RULE 73 - "If something is thick then it is not thin"
    if: hq-1 -lex-  thick
             -hq--> obj-1
  then: hq-2 -lex-  thin
             -neg-  1
             -hq--> obj-1

RULE 74 - "If something is thick then it is not medium thick"
    if: hq-1 -lex-  thick
             -hq--> obj-1
  then: hq-2 -lex-  medium thick
             -neg-  1
             -hq--> obj-1

// ------------------------------------------------

RULE 75 - "If something is thinner than something else then that something is thicker than it"
    if: hq-1 -lex-  thin
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  thick
             -hq--> obj-2
             -alt-> obj-1

RULE 76 - "If something is thicker than something else then that something is thinner than it"
    if: hq-1 -lex-  thick
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  thin
             -hq--> obj-2
             -alt-> obj-1

// ------------------------------------------------

RULE 77 - "Chunky is a thickness"
    if:  hq-1 -lex-  chunky
              -hq--> obj-1
  then: ako-1 -lex-  thickness
              -ako-> hq-1

RULE 78 - "A chunkiness is a thickness"
    if: ako-1 -lex-  chunkiness
              -ako-> hq-1
  then: ako-2 -lex-  thickness
              -ako-> hq-1

RULE 79 - "A thickness is a chunkiness"
    if: ako-1 -lex-  thickness
              -ako-> hq-1
  then: ako-2 -lex-  chunkiness
              -ako-> hq-1

RULE 80 - "If something is thick then it is chunky"
    if: hq-1 -lex-  thick
             -hq--> obj-1
  then: hq-2 -lex-  chunky
             -hq--> obj-1

RULE 81 - "If something is chunky then it is thick"
    if: hq-1 -lex-  chunky
             -hq--> obj-1
  then: hq-2 -lex-  thick
             -hq--> obj-1

RULE 82 - "If something is not thick then it is not chunky"
    if: hq-1 -lex-  thick
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  chunky
             -neg-  1
             -hq--> obj-1

RULE 83 - "If something is not chunky then it is not thick"
    if: hq-1 -lex-  chunky
             -neg-  1
             -hq--> obj-1
  then: hq-2 -lex-  thick
             -neg-  1
             -hq--> obj-1

RULE 84 - "If something is thicker than something else then it is chunkier than it"
    if: hq-1 -lex-  thick
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  chunky
             -hq--> obj-1
             -alt-> obj-2

RULE 85 - "If something is chunkier than something else then it is thicker than it"
    if: hq-1 -lex-  chunky
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  thick
             -hq--> obj-1
             -alt-> obj-2

// ================================================

RULE 86 - "If something is short then it is not medium tall"
    if: hq-1 -lex-  short
             -hq--> obj-1
  then: hq-2 -lex-  medium tall
             -neg-  1
             -hq--> obj-1

RULE 87 - "If something is short then it is not tall"
    if: hq-1 -lex-  short
             -hq--> obj-1
  then: hq-2 -lex-  tall
             -neg-  1
             -hq--> obj-1

RULE 88 - "If something is medium tall then it is not short"
    if: hq-1 -lex-  medium tall
             -hq--> obj-1
  then: hq-2 -lex-  short
             -neg-  1
             -hq--> obj-1

RULE 89 - "If something is medium tall then it is not tall"
    if: hq-1 -lex-  medium tall
             -hq--> obj-1
  then: hq-2 -lex-  tall
             -neg-  1
             -hq--> obj-1

RULE 90 - "If something is tall then it is not short"
    if: hq-1 -lex-  tall
             -hq--> obj-1
  then: hq-2 -lex-  short
             -neg-  1
             -hq--> obj-1

RULE 91 - "If something is tall then it is not medium tall"
    if: hq-1 -lex-  tall
             -hq--> obj-1
  then: hq-2 -lex-  medium tall
             -neg-  1
             -hq--> obj-1

// ------------------------------------------------

RULE 92 - "If something is shorter than something else then that something is taller than it"
    if: hq-1 -lex-  short
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  tall
             -hq--> obj-2
             -alt-> obj-1

RULE 93 - "If something is taller than something else then that something is shorter than it"
    if: hq-1 -lex-  tall
             -hq--> obj-1
             -alt-> obj-2
  then: hq-2 -lex-  short
             -hq--> obj-2
             -alt-> obj-1

// ========================= LEFT OF =======================

RULE 94 - "If something is left of something else then the something else is right of it"
    if: loc-1 -lex-  left of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  right of
              -loc-> obj-2
              -ref-> obj-1

RULE 95 - "If something is left of something else then it is not right of the something else"
    if: loc-1 -lex-  left of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  right of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 96 - "If something is left of something else then it is not in front of the something else"
    if: loc-1 -lex-  left of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  in front of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 97 - "If something is left of something else then it is not behind the something else"
    if: loc-1 -lex-  left of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  behind
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

// ========================= RIGHT OF =======================

RULE 98 - "If something is right of something else then the something else is left of it"
    if: loc-1 -lex-  right of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  left of
              -loc-> obj-2
              -ref-> obj-1

RULE 99 - "If something is right of something else then it is not left of the something else"
    if: loc-1 -lex-  right of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  left of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 100 - "If something is right of something else then it is not in front of the something else"
    if: loc-1 -lex-  right of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  in front of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 101 - "If something is right of something else then it is not behind the something else"
    if: loc-1 -lex-  right of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  behind
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

// ========================= IN FRONT OF =======================

RULE 102 - "If something is in front of something else then the something else is behind it"
    if: loc-1 -lex-  in front of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  behind
              -loc-> obj-2
              -ref-> obj-1

RULE 103 - "If something is in front of something else then it is not left of the something else"
    if: loc-1 -lex-  in front of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  left of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 104 - "If something is in front of something else then it is not right of the something else"
    if: loc-1 -lex-  in front of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  right of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 105 - "If something is in front of something else then it is not behind the something else"
    if: loc-1 -lex-  in front of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  behind
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

// ========================= BEHIND =======================

RULE 106 - "If something is behind something else then the something else is in front of it"
    if: loc-1 -lex-  behind
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  in front of
              -loc-> obj-2
              -ref-> obj-1

RULE 107 - "If something is behind something else then it is not left of the something else"
    if: loc-1 -lex-  behind
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  left of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 108 - "If something is behind something else then it is not right of the something else"
    if: loc-1 -lex-  behind
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  right of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 109 - "If something is behind something else then it is not in front of the something else"
    if: loc-1 -lex-  behind
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  in front of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

RULE 110 - "If something is left of something else then it is to the left of that thing"
    if: loc-1 -lex-  left of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  to the left of
              -loc-> obj-1
              -ref-> obj-2

RULE 111 - "If something is not left of something else then it is not to the left of that thing"
    if: loc-1 -lex-  left of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  to the left of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 112 - "If something is right of something else then it is to the right of that thing"
    if: loc-1 -lex-  right of
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  to the right of
              -loc-> obj-1
              -ref-> obj-2

RULE 113 - "If something is not right of something else then it is not to the right of that thing"
    if: loc-1 -lex-  right of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  to the right of
              -neg-  1
              -loc-> obj-1
              -ref-> obj-2

RULE 114 - "If something is next to something else then it is near that thing"
    if: loc-1 -lex-  next to
              -loc-> obj-1
              -ref-> obj-2
  then: loc-2 -lex-  near
              -loc-> obj-1
              -ref-> obj-2


