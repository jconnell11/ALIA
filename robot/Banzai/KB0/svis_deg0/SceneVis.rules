// Category definitions and rules for SceneVis kernel
// ========================================================

RULE 1 - "Far is a distance"
    if:  hq-1 -lex-  far
              -hq--> obj-1
  then: ako-1 -lex-  distance
              -ako-> hq-1

RULE 2 - "A farness is a distance"
    if: ako-1 -lex-  farness
              -ako-> hq-1
  then: ako-2 -lex-  distance
              -ako-> hq-1

RULE 3 - "A distance is a farness"
    if: ako-1 -lex-  distance
              -ako-> hq-1
  then: ako-2 -lex-  farness
              -ako-> hq-1

RULE 4 - "Close is a distance"
    if:  hq-1 -lex-  close
              -hq--> obj-1
  then: ako-1 -lex-  distance
              -ako-> hq-1

RULE 5 - "A closeness is a distance"
    if: ako-1 -lex-  closeness
              -ako-> hq-1
  then: ako-2 -lex-  distance
              -ako-> hq-1

RULE 6 - "A distance is a closeness"
    if: ako-1 -lex-  distance
              -ako-> hq-1
  then: ako-2 -lex-  closeness
              -ako-> hq-1

// ------------------------------------------------

RULE 7 - "Small is a size"
    if:  hq-1 -lex-  small
              -hq--> obj-1
  then: ako-1 -lex-  size
              -ako-> hq-1

RULE 8 - "A smallness is a size"
    if: ako-1 -lex-  smallness
              -ako-> hq-1
  then: ako-2 -lex-  size
              -ako-> hq-1

RULE 9 - "A size is a smallness"
    if: ako-1 -lex-  size
              -ako-> hq-1
  then: ako-2 -lex-  smallness
              -ako-> hq-1

RULE 10 - "Big is a size"
    if:  hq-1 -lex-  big
              -hq--> obj-1
  then: ako-1 -lex-  size
              -ako-> hq-1

RULE 11 - "A bigness is a size"
    if: ako-1 -lex-  bigness
              -ako-> hq-1
  then: ako-2 -lex-  size
              -ako-> hq-1

RULE 12 - "A size is a bigness"
    if: ako-1 -lex-  size
              -ako-> hq-1
  then: ako-2 -lex-  bigness
              -ako-> hq-1

// ------------------------------------------------

RULE 13 - "Compact is a length"
    if:  hq-1 -lex-  compact
              -hq--> obj-1
  then: ako-1 -lex-  length
              -ako-> hq-1

RULE 14 - "A compactness is a length"
    if: ako-1 -lex-  compactness
              -ako-> hq-1
  then: ako-2 -lex-  length
              -ako-> hq-1

RULE 15 - "A length is a compactness"
    if: ako-1 -lex-  length
              -ako-> hq-1
  then: ako-2 -lex-  compactness
              -ako-> hq-1

RULE 16 - "Long is a length"
    if:  hq-1 -lex-  long
              -hq--> obj-1
  then: ako-1 -lex-  length
              -ako-> hq-1

RULE 17 - "A longness is a length"
    if: ako-1 -lex-  longness
              -ako-> hq-1
  then: ako-2 -lex-  length
              -ako-> hq-1

RULE 18 - "A length is a longness"
    if: ako-1 -lex-  length
              -ako-> hq-1
  then: ako-2 -lex-  longness
              -ako-> hq-1

// ------------------------------------------------

RULE 19 - "Narrow is a width"
    if:  hq-1 -lex-  narrow
              -hq--> obj-1
  then: ako-1 -lex-  width
              -ako-> hq-1

RULE 20 - "A narrowness is a width"
    if: ako-1 -lex-  narrowness
              -ako-> hq-1
  then: ako-2 -lex-  width
              -ako-> hq-1

RULE 21 - "A width is a narrowness"
    if: ako-1 -lex-  width
              -ako-> hq-1
  then: ako-2 -lex-  narrowness
              -ako-> hq-1

RULE 22 - "Wide is a width"
    if:  hq-1 -lex-  wide
              -hq--> obj-1
  then: ako-1 -lex-  width
              -ako-> hq-1

RULE 23 - "A wideness is a width"
    if: ako-1 -lex-  wideness
              -ako-> hq-1
  then: ako-2 -lex-  width
              -ako-> hq-1

RULE 24 - "A width is a wideness"
    if: ako-1 -lex-  width
              -ako-> hq-1
  then: ako-2 -lex-  wideness
              -ako-> hq-1

// ------------------------------------------------

RULE 25 - "Thin is a thickness"
    if:  hq-1 -lex-  thin
              -hq--> obj-1
  then: ako-1 -lex-  thickness
              -ako-> hq-1

RULE 26 - "A thinness is a thickness"
    if: ako-1 -lex-  thinness
              -ako-> hq-1
  then: ako-2 -lex-  thickness
              -ako-> hq-1

RULE 27 - "A thickness is a thinness"
    if: ako-1 -lex-  thickness
              -ako-> hq-1
  then: ako-2 -lex-  thinness
              -ako-> hq-1

RULE 28 - "Thick is a thickness"
    if:  hq-1 -lex-  thick
              -hq--> obj-1
  then: ako-1 -lex-  thickness
              -ako-> hq-1

// ------------------------------------------------

RULE 29 - "Short is a height"
    if:  hq-1 -lex-  short
              -hq--> obj-1
  then: ako-1 -lex-  height
              -ako-> hq-1

RULE 30 - "A shortness is a height"
    if: ako-1 -lex-  shortness
              -ako-> hq-1
  then: ako-2 -lex-  height
              -ako-> hq-1

RULE 31 - "A height is a shortness"
    if: ako-1 -lex-  height
              -ako-> hq-1
  then: ako-2 -lex-  shortness
              -ako-> hq-1

RULE 32 - "Tall is a height"
    if:  hq-1 -lex-  tall
              -hq--> obj-1
  then: ako-1 -lex-  height
              -ako-> hq-1

RULE 33 - "A tallness is a height"
    if: ako-1 -lex-  tallness
              -ako-> hq-1
  then: ako-2 -lex-  height
              -ako-> hq-1

RULE 34 - "A height is a tallness"
    if: ako-1 -lex-  height
              -ako-> hq-1
  then: ako-2 -lex-  tallness
              -ako-> hq-1

// ------------------------------------------------

RULE 35 - "Red is a color"
    if:  hq-1 -lex-  red
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 38 - "Orange is a color"
    if:  hq-1 -lex-  orange
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 41 - "Yellow is a color"
    if:  hq-1 -lex-  yellow
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 44 - "Green is a color"
    if:  hq-1 -lex-  green
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 47 - "Blue is a color"
    if:  hq-1 -lex-  blue
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 50 - "Purple is a color"
    if:  hq-1 -lex-  purple
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 53 - "Black is a color"
    if:  hq-1 -lex-  black
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 56 - "Gray is a color"
    if:  hq-1 -lex-  gray
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


RULE 59 - "White is a color"
    if:  hq-1 -lex-  white
              -hq--> obj-1
  then: ako-1 -lex-  color
              -ako-> hq-1


// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++

RULE 62 - "A distance is a measurement"
    if: ako-1 -lex-  distance
              -ako-> hq-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

RULE 63 - "A size is a measurement"
    if: ako-1 -lex-  size
              -ako-> hq-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

RULE 64 - "A length is a measurement"
    if: ako-1 -lex-  length
              -ako-> hq-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1
         hq-2 -lex-  visual

RULE 65 - "A width is a measurement"
    if: ako-1 -lex-  width
              -ako-> hq-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

RULE 66 - "A thickness is a measurement"
    if: ako-1 -lex-  thickness
              -ako-> hq-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

RULE 67 - "A height is a measurement"
    if: ako-1 -lex-  height
              -ako-> hq-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

// ------------------------------------------------

RULE 68 - "Leftmost is a measurement"
    if:  hq-1 -lex-  leftmost
              -hq--> obj-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

RULE 69 - "Rightmost is a measurement"
    if:  hq-1 -lex-  rightmost
              -hq--> obj-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

RULE 70 - "Middle is a measurement"
    if:  hq-1 -lex-  middle
              -hq--> obj-1
  then: ako-2 -lex-  measurement
              -ako-> hq-1

// ==================================================

//RULE 71 - "Medium tall is a height"
//    if:  hq-1 -lex-  tall
//              -blf-  0
//              -hq--> obj-1
//        deg-1 -lex-  medium
//              -deg-> hq-1
//  then: ako-1 -lex-  height
//              -ako-> hq-1
